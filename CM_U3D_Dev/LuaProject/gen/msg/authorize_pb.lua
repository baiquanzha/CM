-- Code generated by ProtoKitGo. DO NOT EDIT.
-- input: msg/authorize.proto

local pb = require "pb"
local protoc = require "protoc"
local protoStr = [==[
syntax = "proto3";
package msg;
option go_package = "bitbucket.org/funplus/sandwich-sample-conf/gen/golang/msg";
option csharp_namespace = "gen.msg";
message Authorize {
    uint64 PlayerID = 100;// should use access token,just for debug
    string AccessToken = 1;// access token form platform
    bool IsSuccess = 2; // auth success for response
    string GameAccessToken = 3;
}
]==]
assert(protoc:load(protoStr,"msg/authorize.proto"))

---@class Authorize
---@field public PlayerID number
---@field public AccessToken string
---@field public IsSuccess boolean
---@field public GameAccessToken string
local Authorize={}
Authorize.__index = Authorize
---@return Authorize
function Authorize:new(data) return setmetatable(data or {},Authorize)  end
---@return Authorize
function Authorize:newFromBytes(bytes) return setmetatable(pb.decode(self:getMessageName(),bytes) or {},Authorize)  end
---@return string
function Authorize:getMessageName() return "msg.Authorize" end
---@return string
function Authorize:marshal()  return pb.encode(self:getMessageName(),self) end
msg.Authorize = Authorize

